name: Version Bump & Tag

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps (fallback a npm install)
        run: |
          echo "Usando npm install (lock desincronizado rompe npm ci)."
          npm install --no-audit --no-fund

      - name: Determine bump type
        id: decide
        run: |
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit: $LAST_COMMIT_MSG"
          TYPE=""
          if echo "$LAST_COMMIT_MSG" | grep -qi 'breaking change'; then TYPE=major; fi
          if echo "$LAST_COMMIT_MSG" | grep -qE '^[a-zA-Z]+!:'; then TYPE=major; fi
          if [ -z "$TYPE" ] && echo "$LAST_COMMIT_MSG" | grep -qE '^feat(\(|:)'; then TYPE=minor; fi
          if [ -z "$TYPE" ] && echo "$LAST_COMMIT_MSG" | grep -qE '^(fix|perf|release)(\(|:)'; then TYPE=patch; fi
          if [ -z "$TYPE" ]; then echo "No bump"; echo "type=none" >> $GITHUB_OUTPUT; exit 0; fi
          echo "type=$TYPE" >> $GITHUB_OUTPUT
      - name: Bump version
        if: steps.decide.outputs.type != 'none'
        env:
          BUMP_TYPE: ${{ steps.decide.outputs.type }}
        run: |
          node <<'EOF'
const fs = require('fs');
const type = process.env.BUMP_TYPE;
if(!type){ console.error('No bump type provided'); process.exit(1); }
const pkg = JSON.parse(fs.readFileSync('package.json','utf8'));
const [MA,MI,PA] = pkg.version.split('.').map(n=>parseInt(n,10)||0);
let next = pkg.version;
if (type === 'major') next = `${MA+1}.0.0`;
else if (type === 'minor') next = `${MA}.${MI+1}.0`;
else if (type === 'patch') next = `${MA}.${MI}.${PA+1}`;
if(next === pkg.version){ console.log('No version change'); process.exit(0); }
pkg.version = next;
fs.writeFileSync('package.json', JSON.stringify(pkg,null,2)+'\n');
console.log('Version ->', next);
EOF
      - name: Commit & tag
        if: steps.decide.outputs.type != 'none'
        run: |
          NEXT_VERSION=$(node -p "require('./package.json').version")
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add package.json
          git commit -m "ci: bump version to $NEXT_VERSION" || echo "Skip commit (no changes)"
          git tag -a v$NEXT_VERSION -m "Release v$NEXT_VERSION" || echo "Tag ya existe"
          git push --follow-tags
      - name: Output skipped
        if: steps.decide.outputs.type == 'none'
        run: echo "No semantic bump required."
